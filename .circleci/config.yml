version: 2.1

aliases:
  - &on_master_after_test
    context: shardlabs
    filters:
      branches:
        only:
          - master
    requires:
      - test-py-min
      - test-py-max

jobs:
  test-py-min: &test-template
    docker:
      - image: cimg/python:3.7.12-node
    resource_class: medium
    parallelism: 2
    steps:
      - checkout
      - run:
          name: Install development tools
          command: ./scripts/install_dev_tools.sh
      - run:
          name: Check devnet versions
          command: ./scripts/check_versions.sh
      - run:
          name: Lint
          command: poetry run pylint starknet_devnet test
      - run:
          name: Compile test contracts
          command: ./scripts/compile_contracts.sh
      - run:
          name: Run pytest tests
          parallel: true
          command: |
            set -e
            cp -f .circleci/resources/pytest_build_config.ini pytest.ini
            shopt -s globstar
            TEST_FILES=$(circleci tests glob test/test*.py | circleci tests split --split-by=timings)
            mkdir -p test-results
            shopt -u globstar
            poetry run pytest --verbose --junitxml=test-results/junit.xml $TEST_FILES
      - store_test_results:
          path: test-results
      - store_artifacts:
          path: test-results

  test-py-max:
    <<: *test-template
    docker:
      - image: cimg/python:3.9-node

  package_build_and_publish:
    docker:
      - image: cimg/python:3.7.12
    resource_class: medium
    steps:
      - checkout
      - run: ./scripts/package_build_and_publish.sh

  image_build_and_push:
    docker:
      - image: cimg/base:2021.04
    resource_class: medium
    steps:
      - checkout
      - setup_remote_docker:
          version: 20.10.7
      - run:
          name: Build and push image
          command: ./scripts/image_build_and_push.sh
          environment:
            REMOTE: true

  image_build_and_push_arm:
    machine:
      image: ubuntu-2004:202111-02
    resource_class: arm.medium
    steps:
      - checkout
      - run:
          name: Build and push image
          command: ./scripts/image_build_and_push.sh
          environment:
            TAG_SUFFIX: -arm

workflows:
  version: 2
  test_and_publish:
    jobs:
      - test-py-min
      - test-py-max
      - package_build_and_publish:
          <<: *on_master_after_test
      - image_build_and_push:
          <<: *on_master_after_test
      - image_build_and_push_arm:
          <<: *on_master_after_test
